//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Kidvibe.Assets.ECS.Components.Player.RunComponent run { get { return (Kidvibe.Assets.ECS.Components.Player.RunComponent)GetComponent(GameComponentsLookup.Run); } }
    public bool hasRun { get { return HasComponent(GameComponentsLookup.Run); } }

    public void AddRun(float newSpeed) {
        var index = GameComponentsLookup.Run;
        var component = (Kidvibe.Assets.ECS.Components.Player.RunComponent)CreateComponent(index, typeof(Kidvibe.Assets.ECS.Components.Player.RunComponent));
        component.speed = newSpeed;
        AddComponent(index, component);
    }

    public void ReplaceRun(float newSpeed) {
        var index = GameComponentsLookup.Run;
        var component = (Kidvibe.Assets.ECS.Components.Player.RunComponent)CreateComponent(index, typeof(Kidvibe.Assets.ECS.Components.Player.RunComponent));
        component.speed = newSpeed;
        ReplaceComponent(index, component);
    }

    public void RemoveRun() {
        RemoveComponent(GameComponentsLookup.Run);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRun;

    public static Entitas.IMatcher<GameEntity> Run {
        get {
            if (_matcherRun == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Run);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRun = matcher;
            }

            return _matcherRun;
        }
    }
}
